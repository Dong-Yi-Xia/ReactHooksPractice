[{"/Users/dong/Desktop/ReactHooksPractice/src/Component/AxiosReq.js":"1","/Users/dong/Desktop/ReactHooksPractice/src/Component/TestState.js":"2","/Users/dong/Desktop/ReactHooksPractice/src/App.js":"3","/Users/dong/Desktop/ReactHooksPractice/src/Component/AxiosAdd.js":"4","/Users/dong/Desktop/ReactHooksPractice/src/index.js":"5","/Users/dong/Desktop/ReactHooksPractice/src/Component/Effect.js":"6"},{"size":2685,"mtime":1609263373000,"results":"7","hashOfConfig":"8"},{"size":1205,"mtime":1609257831000,"results":"9","hashOfConfig":"8"},{"size":385,"mtime":1609257831000,"results":"10","hashOfConfig":"8"},{"size":956,"mtime":1609263422000,"results":"11","hashOfConfig":"8"},{"size":176,"mtime":1609257831000,"results":"12","hashOfConfig":"8"},{"size":1817,"mtime":1609257831000,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16"},"migtc4",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/dong/Desktop/ReactHooksPractice/src/Component/AxiosReq.js",["30"],"import React, {useState, useEffect} from 'react'\nimport axios from 'axios'\n// import uuid from 'react-uuid'\n\nfunction AxiosReq (){\n\n    let [person, setPerson] = useState([])\n\n    //*Remember second params ins useEffect is a [], to render once, else it will rendering forever \n    //causing memory leak. \n    useEffect(()=>{\n        axios.get('http://localhost:3000/users')\n        .then(res => {\n            console.log(res.data)\n            setPerson(res.data)\n        })\n    },[])\n\n    // console.log(person)\n    let list = person.map(pp => {\n        return <li key={pp.id}> {pp.id} - {pp.name} </li>\n    })\n\n// ###### add a new user to list\n\n    let [name, setName] = useState(\"i am blank\")\n\n    let handleChange = (evt) => {\n        // console.log(evt.target.value)\n        setName(evt.target.value)\n    }\n\n    let handleSubmit = (evt) => {\n        evt.preventDefault()\n\n        let user = () => {\n            return {name:name, age:5}\n        }\n\n        let randomUser = {\n            name : name,\n            randomAge : 6\n        }\n\n        // axios.post('http://localhost:3000/users', user() )\n        axios.post('http://localhost:3000/users', randomUser )\n        .then(res => {\n            console.log(res.data) \n            setName(\"\")\n            setPerson(preState => [...preState, res.data])\n        })\n    }\n\n\n     // ###### Update a user from the list\n    // axios.patch(`http://localhost:3000/users/${id}`, randomUser )\n\n\n\n\n    // ###### Delete a user from the list\n\n    let [id, setID] = useState(\"\")\n\n    let handleChangeID = (evt) => {\n        // console.log(evt.target.value)\n        setID(evt.target.value)\n    }\n\n    let handleDelete = (evt) => {\n        evt.preventDefault()\n\n        axios.delete(`http://localhost:3000/users/${id}`)\n        .then(res => {\n            console.log(res.data) \n            setPerson(preState => {\n                return preState.filter(n => n.id !== Number(id))\n            })\n            setID(\"\")\n        })\n    }\n\n\n\n    return(\n        <div>\n            <ul>\n                 {list}\n            </ul>\n\n            <form onSubmit={handleSubmit}>\n                <label>\n                    person name:\n                    <input type=\"text\" name=\"name\" value={name} onChange={handleChange} />\n                </label>\n                <button type=\"submit\">Add</button>\n            </form>\n\n            <form onSubmit={handleDelete}>\n                <label>\n                    person ID:\n                    <input type=\"number\" name=\"id\" value={id} onChange={handleChangeID} />\n                </label>\n                <button type=\"submit\">Delete</button>\n            </form>\n\n        </div>\n    )\n}\n\nexport default AxiosReq","/Users/dong/Desktop/ReactHooksPractice/src/Component/TestState.js",[],"/Users/dong/Desktop/ReactHooksPractice/src/App.js",["31","32"],"import logo from './logo.svg';\nimport './App.css';\nimport TestState from './Component/TestState'\nimport Effect from './Component/Effect'\nimport AxiosReq from './Component/AxiosReq'\nimport AxiosAdd from './Component/AxiosAdd'\n\n\n\nfunction App() {\n\n  return (\n    <div>\n      {/* <AxiosAdd/> */}\n      <AxiosReq/>\n      <TestState/>\n      <Effect/>\n    </div>\n  );\n}\n\nexport default App;\n",["33","34"],"/Users/dong/Desktop/ReactHooksPractice/src/Component/AxiosAdd.js",["35"],"import React, {useState, useEffect} from 'react'\nimport axios from 'axios'\n\nfunction AxiosAdd (){\n\n    let [name, setName] = useState(\"\")\n\n\n    let handleChange = (evt) => {\n        // console.log(evt.target.value)\n        setName(evt.target.value)\n    }\n\n    let handleSubmit = (evt) => {\n        evt.preventDefault()\n\n        //this a data payload\n        const user = {newNameAdded: name}\n\n        axios.post('https://jsonplaceholder.typicode.com/users', {user})\n        .then(res => {\n            // console.log(res)\n            console.log(res.data)\n        })\n    }\n \n   \n\n    // console.log(name)   \n    return(\n        <div>\n            <form onSubmit={handleSubmit}>\n                <label>\n                    person name:\n                    <input type=\"text\" name=\"name\" onChange={handleChange} />\n                </label>\n                <button type=\"submit\">Add</button>\n            </form>\n\n\n        </div>\n    )\n}\n\nexport default AxiosAdd","/Users/dong/Desktop/ReactHooksPractice/src/index.js",[],"/Users/dong/Desktop/ReactHooksPractice/src/Component/Effect.js",[],{"ruleId":"36","severity":1,"message":"37","line":36,"column":13,"nodeType":"38","messageId":"39","endLine":36,"endColumn":17},{"ruleId":"36","severity":1,"message":"40","line":1,"column":8,"nodeType":"38","messageId":"39","endLine":1,"endColumn":12},{"ruleId":"36","severity":1,"message":"41","line":6,"column":8,"nodeType":"38","messageId":"39","endLine":6,"endColumn":16},{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","replacedBy":"45"},{"ruleId":"36","severity":1,"message":"46","line":1,"column":26,"nodeType":"38","messageId":"39","endLine":1,"endColumn":35},"no-unused-vars","'user' is assigned a value but never used.","Identifier","unusedVar","'logo' is defined but never used.","'AxiosAdd' is defined but never used.","no-native-reassign",["47"],"no-negated-in-lhs",["48"],"'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation"]