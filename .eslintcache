[{"/Users/dong/Desktop/ReactHooksPractice/src/Component/AxiosReq.js":"1","/Users/dong/Desktop/ReactHooksPractice/src/Component/TestState.js":"2","/Users/dong/Desktop/ReactHooksPractice/src/App.js":"3","/Users/dong/Desktop/ReactHooksPractice/src/Component/AxiosAdd.js":"4","/Users/dong/Desktop/ReactHooksPractice/src/index.js":"5"},{"size":1638,"mtime":1608329857000,"results":"6","hashOfConfig":"7"},{"size":1205,"mtime":1606767123000,"results":"8","hashOfConfig":"7"},{"size":385,"mtime":1608328132000,"results":"9","hashOfConfig":"7"},{"size":926,"mtime":1608324041000,"results":"10","hashOfConfig":"7"},{"size":176,"mtime":1606755111000,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14"},"migtc4",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"17","messages":"18","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/dong/Desktop/ReactHooksPractice/src/Component/AxiosReq.js",["23"],"import React, {useState, useEffect} from 'react'\nimport axios from 'axios'\nimport uuid from 'react-uuid'\n\nfunction AxiosReq (){\n\n    let [person, setPerson] = useState([])\n\n    //*Remember second params ins useEffect is a [], to render once, else it will rendering forever \n    //causing memory leak. \n    useEffect(()=>{\n        axios.get('http://localhost:3000/users')\n        .then(res => {\n            console.log(res.data)\n            setPerson(res.data)\n        })\n    },[])\n\n    // console.log(person)\n    let list = person.map(pp => {\n        return <li key={pp.id}> {pp.name} </li>\n    })\n\n// ###### add a new user to list\n\n    let [name, setName] = useState(\"i am blank\")\n\n    let handleChange = (evt) => {\n        // console.log(evt.target.value)\n        setName(evt.target.value)\n    }\n\n    let handleSubmit = (evt) => {\n        evt.preventDefault()\n\n        let user = () => {\n            return {name:name, age:5}\n        }\n        // axios.post('http://localhost:3000/users', {name} )\n        axios.post('http://localhost:3000/users', user() )\n        .then(res => {\n            console.log(res.data)\n            setName(\"\")\n            setPerson(preState => [...preState, res.data])\n        })\n    }\n\n    return(\n        <div>\n            <ul>\n                 {list}\n            </ul>\n\n            <form onSubmit={handleSubmit}>\n                <label>\n                    person name:\n                    <input type=\"text\" name=\"name\" value={name} onChange={handleChange} />\n                </label>\n                <button type=\"submit\">Add</button>\n            </form>\n\n        </div>\n    )\n}\n\nexport default AxiosReq","/Users/dong/Desktop/ReactHooksPractice/src/Component/TestState.js",[],"/Users/dong/Desktop/ReactHooksPractice/src/App.js",["24","25"],"/Users/dong/Desktop/ReactHooksPractice/src/Component/AxiosAdd.js",["26"],"/Users/dong/Desktop/ReactHooksPractice/src/index.js",[],{"ruleId":"27","severity":1,"message":"28","line":3,"column":8,"nodeType":"29","messageId":"30","endLine":3,"endColumn":12},{"ruleId":"27","severity":1,"message":"31","line":1,"column":8,"nodeType":"29","messageId":"30","endLine":1,"endColumn":12},{"ruleId":"27","severity":1,"message":"32","line":6,"column":8,"nodeType":"29","messageId":"30","endLine":6,"endColumn":16},{"ruleId":"27","severity":1,"message":"33","line":1,"column":26,"nodeType":"29","messageId":"30","endLine":1,"endColumn":35},"no-unused-vars","'uuid' is defined but never used.","Identifier","unusedVar","'logo' is defined but never used.","'AxiosAdd' is defined but never used.","'useEffect' is defined but never used."]